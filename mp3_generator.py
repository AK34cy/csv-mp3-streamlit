# mp3_generator.py
import streamlit as st
import pandas as pd
from io import BytesIO
from db import get_file
from gtts import gTTS
from pydub import AudioSegment
from pydub.utils import which

# –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ ffmpeg, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π
AudioSegment.converter = which("ffmpeg")


def build_merged_mp3(df: pd.DataFrame, pause_sec: float = 0.5) -> bytes:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3 –∏–∑ DataFrame.
    –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ df –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∑–≤—É–∫, –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ = pause_sec —Å–µ–∫—É–Ω–¥.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π –±–∞–π—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è Streamlit.
    """
    mp3_combined = AudioSegment.silent(duration=0)

    for row in df.itertuples(index=False):
        text = " ".join(str(x) for x in row if pd.notna(x))
        tts = gTTS(text=text, lang="ru")
        buf = BytesIO()
        tts.write_to_fp(buf)
        buf.seek(0)
        segment = AudioSegment.from_file(buf, format="mp3")
        mp3_combined += segment + AudioSegment.silent(duration=int(pause_sec * 1000))

    out_buf = BytesIO()
    mp3_combined.export(out_buf, format="mp3")
    return out_buf.getvalue()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–º–µ–Ω–Ω–æ bytes –¥–ª—è Streamlit


def mp3_generator_block(user, df: pd.DataFrame, pause_sec: float = 0.5):
    """
    Streamlit-–±–ª–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MP3.
    –¢—Ä–µ–±—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–ª —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–¥–∞–Ω DataFrame df.
    """
    st.subheader("üéß –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä MP3")

    st.write(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: **{st.session_state.get('current_file_name', '‚Äî')}** ({len(df)} —Å—Ç—Ä–æ–∫)")

    if st.button("‚ñ∂Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å MP3"):
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è..."):
            mp3_bytes = build_merged_mp3(df, pause_sec=pause_sec)
            st.audio(mp3_bytes, format="audio/mpeg")
            st.download_button(
                "üíæ –°–∫–∞—á–∞—Ç—å MP3",
                data=mp3_bytes,
                file_name=f"{st.session_state.get('current_file_name', 'output')}.mp3"
            )
