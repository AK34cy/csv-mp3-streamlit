# mp3_generator.py
import streamlit as st
import pandas as pd
from io import BytesIO
from db import get_file
from gtts import gTTS
from pydub import AudioSegment
import re
import time

# –ü—Ä–æ—Å—Ç–µ–π—à–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ —Å–∏–º–≤–æ–ª–∞–º: –∫–∏—Ä–∏–ª–ª–∏—Ü–∞ -> —Ä—É—Å—Å–∫–∏–π, –ª–∞—Ç–∏–Ω–∏—Ü–∞ -> –Ω–µ–º–µ—Ü–∫–∏–π
def detect_lang(text: str):
    if re.search(r'[–ê-–Ø–∞-—è]', text):
        return 'ru'
    else:
        return 'de'

def build_merged_mp3(df: pd.DataFrame, pause_sec: float = 0.5):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3 –∏–∑ DataFrame.
    –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ df –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∑–≤—É–∫, –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ = pause_sec —Å–µ–∫—É–Ω–¥.
    """
    mp3_combined = AudioSegment.silent(duration=0)
    for row in df.itertuples(index=False):
        text = " ".join(str(x) for x in row if pd.notna(x))
        lang = detect_lang(text)
        tts = gTTS(text=text, lang=lang)
        buf = BytesIO()
        tts.write_to_fp(buf)
        buf.seek(0)
        segment = AudioSegment.from_file(buf, format="mp3")
        mp3_combined += segment + AudioSegment.silent(duration=int(pause_sec * 1000))
    out_buf = BytesIO()
    mp3_combined.export(out_buf, format="mp3")
    out_buf.seek(0)
    return out_buf

def mp3_generator_block(user, df: pd.DataFrame, pause_sec: float = 0.5):
    """
    Streamlit-–±–ª–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MP3.
    df: DataFrame –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    pause_sec: –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏
    """
    st.subheader("üéß –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä MP3")

    if df is None or df.empty:
        st.info("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å–ª–µ–≤–∞")
        return

    # –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    if st.button("‚ñ∂Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å MP3"):
        progress_text = st.empty()
        progress_bar = st.progress(0)

        mp3_combined = BytesIO()
        total_rows = len(df)
        temp_audio = AudioSegment.silent(duration=0)

        for i, row in enumerate(df.itertuples(index=False)):
            text = " ".join(str(x) for x in row if pd.notna(x))
            lang = detect_lang(text)
            tts = gTTS(text=text, lang=lang)
            buf = BytesIO()
            tts.write_to_fp(buf)
            buf.seek(0)
            segment = AudioSegment.from_file(buf, format="mp3")
            temp_audio += segment + AudioSegment.silent(duration=int(pause_sec * 1000))

            progress = int((i + 1) / total_rows * 100)
            progress_bar.progress(progress)
            progress_text.text(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è {i+1}/{total_rows} —Å—Ç—Ä–æ–∫...")

            # –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞, —á—Ç–æ–±—ã UI –æ–±–Ω–æ–≤–ª—è–ª—Å—è
            time.sleep(0.05)

        temp_audio.export(mp3_combined, format="mp3")
        mp3_combined.seek(0)

        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–ª–µ–µ—Ä –∏ –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        st.success("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        st.audio(mp3_combined, format="audio/mp3")

        # –î–ª—è –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π –±—É—Ñ–µ—Ä
        mp3_buf2 = BytesIO(mp3_combined.getvalue())
        st.download_button("üíæ –°–∫–∞—á–∞—Ç—å MP3", data=mp3_buf2, file_name="output.mp3")
