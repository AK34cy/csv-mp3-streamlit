# mp3_generator.py
import streamlit as st
import pandas as pd
from io import BytesIO
from db import get_file
from gtts import gTTS
from pydub import AudioSegment

def build_merged_mp3(df, pause_sec=0.5):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3 –∏–∑ DataFrame.
    –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ df –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∑–≤—É–∫, –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ = pause_sec —Å–µ–∫—É–Ω–¥.
    """
    mp3_combined = AudioSegment.silent(duration=0)
    for row in df.itertuples(index=False):
        text = " ".join(str(x) for x in row if pd.notna(x))
        tts = gTTS(text=text, lang="ru")
        buf = BytesIO()
        tts.write_to_fp(buf)
        buf.seek(0)
        segment = AudioSegment.from_file(buf, format="mp3")
        mp3_combined += segment + AudioSegment.silent(duration=int(pause_sec * 1000))
    out_buf = BytesIO()
    mp3_combined.export(out_buf, format="mp3")
    out_buf.seek(0)
    return out_buf

def mp3_generator_block(user):
    """
    Streamlit-–±–ª–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MP3.
    –¢—Ä–µ–±—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–ª —Ñ–∞–π–ª (st.session_state.current_file_id).
    """
    st.subheader("üéß –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä MP3")

    conn = st.session_state.conn

    if "current_file_id" not in st.session_state:
        st.info("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å–ª–µ–≤–∞")
        return

    file_data = get_file(conn, st.session_state.current_file_id, user["id"])
    if not file_data:
        st.error("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    file_name = file_data['filename']

    # –ß—Ç–µ–Ω–∏–µ CSV
    df = pd.read_csv(BytesIO(file_data['data']), header=None).dropna(how="any").reset_index(drop=True)

    st.write(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: **{file_name}** ({len(df)} —Å—Ç—Ä–æ–∫)")

    # –ü–∞—Ä–∞–º–µ—Ç—Ä –ø–∞—É–∑—ã
    pause_sec = st.slider(
        "–ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏, —Å–µ–∫",
        min_value=0.0, max_value=5.0, value=0.5, step=0.1
    )

    if st.button("‚ñ∂Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å MP3"):
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è..."):
            mp3_buf = build_merged_mp3(df, pause_sec=pause_sec)
            st.audio(mp3_buf, format="audio/mp3")
            st.download_button(
                "üíæ –°–∫–∞—á–∞—Ç—å MP3",
                data=mp3_buf,
                file_name=f"{file_name}.mp3"
            )
