# mp3_generator.py
import streamlit as st
import pandas as pd
from io import BytesIO
from gtts import gTTS
from pydub import AudioSegment

def build_merged_mp3(df: pd.DataFrame, selected_indices: list[int], pause_sec: float = 0.5):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3 –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ DataFrame.
    –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ df –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∑–≤—É–∫, –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ = pause_sec —Å–µ–∫—É–Ω–¥.
    """
    mp3_combined = AudioSegment.silent(duration=0)
    selected_rows = df.iloc[selected_indices]

    progress_total = len(selected_rows)
    progress_bar = st.progress(0)

    for i, row in enumerate(selected_rows.itertuples(index=False), 1):
        text_parts = []
        for word in row:
            if pd.isna(word):
                continue
            # –ü—Ä–æ—Å—Ç–µ–π—à–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞
            lang = 'de' if any(ord(c) > 127 for c in str(word)) else 'ru'
            tts = gTTS(text=str(word), lang=lang)
            buf = BytesIO()
            tts.write_to_fp(buf)
            buf.seek(0)
            segment = AudioSegment.from_file(buf, format="mp3")
            text_parts.append(segment)
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏
        line_segment = sum(text_parts, AudioSegment.silent(duration=0))
        mp3_combined += line_segment + AudioSegment.silent(duration=int(pause_sec * 1000))
        progress_bar.progress(i / progress_total)

    out_buf = BytesIO()
    mp3_combined.export(out_buf, format="mp3")
    out_buf.seek(0)
    return out_buf

def mp3_generator_block(user, df: pd.DataFrame, pause_sec: float, selected_indices: list[int]):
    """
    Streamlit-–±–ª–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MP3.
    –¢—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ —Å—Ç—Ä–æ–∫.
    """
    st.subheader("üéß –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä MP3")
    if not selected_indices:
        st.info("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
        return

    if st.button("‚ñ∂Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å MP3"):
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3..."):
            mp3_buf = build_merged_mp3(df, selected_indices, pause_sec=pause_sec)
            # –ß—Ç–æ–±—ã st.audio –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª –±—É—Ñ–µ—Ä
            mp3_buf.seek(0)
            st.audio(mp3_buf.read(), format="audio/mp3")
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
            mp3_buf.seek(0)
            st.download_button("üíæ –°–∫–∞—á–∞—Ç—å MP3", data=mp3_buf.read(), file_name="output.mp3")
