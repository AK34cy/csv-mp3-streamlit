# mp3_generator.py
import streamlit as st
import pandas as pd
from io import BytesIO
from gtts import gTTS
from pydub import AudioSegment

def build_merged_mp3(df, selected_indices, pause_sec=0.5):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è MP3 –∏–∑ DataFrame –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫.
    –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ df –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∑–≤—É–∫, –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏ = pause_sec —Å–µ–∫—É–Ω–¥.
    –†—É—Å—Å–∫–∏–µ —Å–ª–æ–≤–∞ –æ–∑–≤—É—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ 'ru', –Ω–µ–º–µ—Ü–∫–∏–µ –Ω–∞ 'de'.
    """
    mp3_combined = AudioSegment.silent(duration=0)
    total = len(selected_indices)

    for idx, i in enumerate(selected_indices, 1):
        row = df.iloc[i]
        row_texts = [str(x) for x in row if pd.notna(x)]
        for text in row_texts:
            lang = "ru" if is_russian(text) else "de"
            tts = gTTS(text=text, lang=lang)
            buf = BytesIO()
            tts.write_to_fp(buf)
            buf.seek(0)
            segment = AudioSegment.from_file(buf, format="mp3")
            mp3_combined += segment + AudioSegment.silent(duration=int(pause_sec * 1000))
        st.progress(idx / total)

    out_buf = BytesIO()
    mp3_combined.export(out_buf, format="mp3")
    out_buf.seek(0)
    return out_buf

def is_russian(text: str) -> bool:
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –µ—Å—Ç—å –∫–∏—Ä–∏–ª–ª–∏—Ü–∞, —Å—á–∏—Ç–∞–µ–º —Ä—É—Å—Å–∫–∏–º"""
    return any('–∞' <= c <= '—è' or '–ê' <= c <= '–Ø' for c in text)

def mp3_generator_block(user, df, pause_sec, selected_indices):
    """
    Streamlit-–±–ª–æ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MP3.
    df: –ø–æ–ª–Ω—ã–π DataFrame –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    selected_indices: –∏–Ω–¥–µ–∫—Å—ã –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    """
    st.subheader("üéß –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä MP3")

    if not selected_indices:
        st.info("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
        return

    if st.button("‚ñ∂Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å MP3"):
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è..."):
            mp3_buf = build_merged_mp3(df, selected_indices, pause_sec=pause_sec)
            st.audio(mp3_buf, format="audio/mp3")
            st.download_button(
                "üíæ –°–∫–∞—á–∞—Ç—å MP3",
                data=mp3_buf,
                file_name="output.mp3"
            )
